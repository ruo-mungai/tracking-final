{"ast":null,"code":"import axios from \"axios\";\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\n// for fetching from backend\nexport const fetchALLMembers = createAsyncThunk(\"members/getAPI\", async () => {\n  const response = await axios.get(\"/members\");\n  return response.data;\n});\n\n// get my member only\nexport const fetchMyMembers = createAsyncThunk(\"members/getAPI\", async () => {\n  const response = await axios.get(\"/members\");\n  return response.data;\n});\n\n//adding new items\nexport const saveNewMember = createAsyncThunk(\"members/createAPI\", async payload => {\n  const response = await axios.post(\"/members\", payload);\n  return response.data;\n});\n// updating member\nexport const updateMember = createAsyncThunk(\"members/updateAPI\", async payload => {\n  const response = await axios.put(`/members/${payload.id}`, payload);\n  return response.data;\n});\n\n//instiall state\nconst initialState = {\n  membersData: [],\n  loading: \"idle\"\n};\n\n//member slice\nconst memberslice = createSlice({\n  name: \"members\",\n  initialState,\n  reducers: {},\n  // data fetching extra reducers ///\n  extraReducers: builder => {\n    builder.addCase(fetchALLMembers.pending, (state, action) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(fetchALLMembers.fulfilled, (state, action) => {\n      state.loading = \"idle\";\n      state.membersData = action.payload;\n    });\n\n    //data add extra reducers\n    builder.addCase(saveNewMember.pending, (state, action) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(saveNewMember.fulfilled, (state, action) => {\n      state.loading = \"idle\";\n      state.membersData.unshift(action.payload);\n    });\n    /////////// data add\n    builder.addCase(updateMember.pending, state => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(updateMember.fulfilled, (state, action) => {\n      state.loading = \"idle\";\n      state.membersData = state.membersData.filter(_ => _.id !== action.payload.id);\n      state.membersData.unshift(action.payload);\n    });\n  }\n});\nexport const getAllMembers = state => state.member.membersData;\nexport const getLoading = state => state.member.loading;\nexport const getMemberById = id => {\n  return state => state.member.membersData.filter(_ => _.id === id)[0];\n};\nexport default memberslice.reducer;","map":{"version":3,"names":["axios","createSlice","createAsyncThunk","require","fetchALLMembers","response","get","data","fetchMyMembers","saveNewMember","payload","post","updateMember","put","id","initialState","membersData","loading","memberslice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","unshift","filter","_","getAllMembers","member","getLoading","getMemberById","reducer"],"sources":["/home/ruo/tracking-3/tracking-front/src/slice/memberslice.js"],"sourcesContent":["import axios from \"axios\";\n\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\n\n// for fetching from backend\nexport const fetchALLMembers = createAsyncThunk(\"members/getAPI\", async () => {\n  const response = await axios.get(\"/members\");\n  return response.data;\n});\n\n// get my member only\nexport const fetchMyMembers = createAsyncThunk(\"members/getAPI\", async () => {\n  const response = await axios.get(\"/members\");\n  return response.data;\n});\n\n//adding new items\nexport const saveNewMember = createAsyncThunk(\n  \"members/createAPI\",\n  async (payload) => {\n    const response = await axios.post(\"/members\", payload);\n    return response.data;\n  }\n);\n// updating member\nexport const updateMember = createAsyncThunk(\n  \"members/updateAPI\",\n  async (payload) => {\n    const response = await axios.put(\n      `/members/${payload.id}`,\n      payload\n    );\n    return response.data;\n  }\n);\n\n//instiall state\nconst initialState = {\n  membersData: [],\n  loading: \"idle\",\n};\n\n//member slice\nconst memberslice = createSlice({\n  name: \"members\",\n  initialState,\n  reducers: {},\n  // data fetching extra reducers ///\n  extraReducers: (builder) => {\n    builder.addCase(fetchALLMembers.pending, (state, action) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(fetchALLMembers.fulfilled, (state, action) => {\n      state.loading = \"idle\";\n      state.membersData = action.payload;\n    });\n\n    //data add extra reducers\n    builder.addCase(saveNewMember.pending, (state, action) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(saveNewMember.fulfilled, (state, action) => {\n      state.loading = \"idle\";\n      state.membersData.unshift(action.payload);\n    });\n    /////////// data add\n    builder.addCase(updateMember.pending, (state) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(updateMember.fulfilled, (state, action) => {\n      state.loading = \"idle\";\n      state.membersData = state.membersData.filter(\n        (_) => _.id !== action.payload.id\n      );\n      state.membersData.unshift(action.payload);\n    });\n  },\n});\n\nexport const getAllMembers = (state) => state.member.membersData;\nexport const getLoading = (state) => state.member.loading;\nexport const getMemberById = (id) => {\n  return (state) => state.member.membersData.filter((_) => _.id === id)[0];\n};\nexport default memberslice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}