{"ast":null,"code":"var _jsxFileName = \"/home/ruo/tracking-3/tracking-front/src/users/UserTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UserRow from './UserRow';\nimport EditUser from './EditUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserTable(_ref) {\n  _s();\n  let {\n    users,\n    onUpdateUser\n  } = _ref;\n  // state for conditional render of edit form\n  const [isEditing, setIsEditing] = useState(false);\n  // state for edit form inputs\n  const [editForm, setEditForm] = useState({\n    id: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    cohort_id: \"\"\n  });\n\n  // when PATCH request happens; auto-hides the form, pushes changes to display\n  function handleUserUpdate(updatedUser) {\n    setIsEditing(false);\n    onUpdateUser(updatedUser);\n  }\n\n  // capture user input in edit form inputs\n  function handleChange(e) {\n    setEditForm({\n      ...editForm,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  // needed logic for conditional rendering of the form - shows the customer you want when you want them, and hides it when you don't\n  function changeEditState(user) {\n    if (user.id === editForm.id) {\n      setIsEditing(isEditing => !isEditing); // hides the form\n    } else if (isEditing === false) {\n      setIsEditing(isEditing => !isEditing); // shows the form\n    }\n  }\n\n  // capture the customer you wish to edit, set to state\n  function captureEdit(clickedUser) {\n    let filtered = users.filter(user => user.id === clickedUser.id);\n    setEditForm(filtered[0]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(EditUser, {\n      editForm: editForm,\n      handleChange: handleChange,\n      handleUserUpdate: handleUserUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cohort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(UserRow, {\n          user: user,\n          captureEdit: captureEdit,\n          changeEditState: changeEditState\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_s(UserTable, \"5Fd5WtnTEcuXxUXmwc+B2EQsAlA=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","UserRow","EditUser","UserTable","users","onUpdateUser","isEditing","setIsEditing","editForm","setEditForm","id","first_name","last_name","email","cohort_id","handleUserUpdate","updatedUser","handleChange","e","target","name","value","changeEditState","user","captureEdit","clickedUser","filtered","filter","map"],"sources":["/home/ruo/tracking-3/tracking-front/src/users/UserTable.js"],"sourcesContent":["import React, {useState} from 'react'\nimport UserRow from './UserRow'\nimport EditUser from './EditUser'\n\nfunction UserTable({users, onUpdateUser}) {\n// state for conditional render of edit form\n  const [isEditing, setIsEditing] = useState(false);\n// state for edit form inputs\n  const [editForm, setEditForm] = useState({\n    id: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    cohort_id: \"\"\n  })\n\n// when PATCH request happens; auto-hides the form, pushes changes to display\n  function handleUserUpdate(updatedUser) {\n      setIsEditing(false);\n      onUpdateUser(updatedUser);\n    }\n\n// capture user input in edit form inputs\n  function handleChange(e) {\n    setEditForm({\n    ...editForm,\n    [e.target.name]: e.target.value\n    })\n  }\n\n// needed logic for conditional rendering of the form - shows the customer you want when you want them, and hides it when you don't\n  function changeEditState(user) {\n    if (user.id === editForm.id) {\n      setIsEditing(isEditing => !isEditing) // hides the form\n    } else if (isEditing === false) {\n      setIsEditing(isEditing => !isEditing) // shows the form\n    }\n  }\n\n// capture the customer you wish to edit, set to state\n  function captureEdit(clickedUser) {\n    let filtered = users.filter(user => user.id === clickedUser.id)\n    setEditForm(filtered[0])\n  }\n\n  return (\n      <div>\n        {isEditing?\n          (<EditUser\n            editForm={editForm}\n            handleChange={handleChange}\n            handleUserUpdate={handleUserUpdate}\n          />) : null}\n        <table>\n          <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Email</th>\n              <th>Cohort</th>\n              <th>Action</th>\n\n            </tr>\n          </thead>\n          <tbody>\n              { users.map(user =>\n                <UserRow\n                  key={user.id}\n                  user={user}\n                  captureEdit={captureEdit}\n                  changeEditState={changeEditState}\n                />) }\n          </tbody>\n        </table>\n      </div>\n   )\n}\nexport default UserTable"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAEjC,SAASC,SAAS,OAAwB;EAAA;EAAA,IAAvB;IAACC,KAAK;IAAEC;EAAY,CAAC;EACxC;EACE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD;EACE,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,EAAE,EAAE,EAAE;IACNC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEJ;EACE,SAASC,gBAAgB,CAACC,WAAW,EAAE;IACnCT,YAAY,CAAC,KAAK,CAAC;IACnBF,YAAY,CAACW,WAAW,CAAC;EAC3B;;EAEJ;EACE,SAASC,YAAY,CAACC,CAAC,EAAE;IACvBT,WAAW,CAAC;MACZ,GAAGD,QAAQ;MACX,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC1B,CAAC,CAAC;EACJ;;EAEF;EACE,SAASC,eAAe,CAACC,IAAI,EAAE;IAC7B,IAAIA,IAAI,CAACb,EAAE,KAAKF,QAAQ,CAACE,EAAE,EAAE;MAC3BH,YAAY,CAACD,SAAS,IAAI,CAACA,SAAS,CAAC,EAAC;IACxC,CAAC,MAAM,IAAIA,SAAS,KAAK,KAAK,EAAE;MAC9BC,YAAY,CAACD,SAAS,IAAI,CAACA,SAAS,CAAC,EAAC;IACxC;EACF;;EAEF;EACE,SAASkB,WAAW,CAACC,WAAW,EAAE;IAChC,IAAIC,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACb,EAAE,KAAKe,WAAW,CAACf,EAAE,CAAC;IAC/DD,WAAW,CAACiB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1B;EAEA,oBACI;IAAA,WACGpB,SAAS,gBACP,QAAC,QAAQ;MACR,QAAQ,EAAEE,QAAS;MACnB,YAAY,EAAES,YAAa;MAC3B,gBAAgB,EAAEF;IAAiB;MAAA;MAAA;MAAA;IAAA,QACnC,GAAI,IAAI,eACZ;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAmB,eACnB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAkB,eAClB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe,eACf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA;UAAA;UAAA;UAAA;QAAA;MAEZ;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACMX,KAAK,CAACwB,GAAG,CAACL,IAAI,iBACd,QAAC,OAAO;UAEN,IAAI,EAAEA,IAAK;UACX,WAAW,EAAEC,WAAY;UACzB,eAAe,EAAEF;QAAgB,GAH5BC,IAAI,CAACb,EAAE;UAAA;UAAA;UAAA;QAAA,QAIZ;MAAC;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ;AAAC,GAxEQP,SAAS;AAAA,KAATA,SAAS;AAyElB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}