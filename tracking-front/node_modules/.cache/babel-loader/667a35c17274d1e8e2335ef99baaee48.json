{"ast":null,"code":"var _jsxFileName = \"/home/ruo/tracking-3/tracking-front/src/cohorts/Cohort.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewCohort from './NewCohort';\nimport CohortList from './CohortList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cohort() {\n  _s();\n  const [cohorts, setCohorts] = useState([]);\n  useEffect(() => {\n    fetch(\"/cohorts\").then(r => r.json()).then(cohortsArray => {\n      setCohorts(cohortsArray);\n      console.log(cohortsArray);\n    });\n  }, []);\n  function handleAddCohort(newCohort) {\n    const updatedCohortArray = [newCohort, ...cohorts];\n    setCohorts(updatedCohortArray);\n  }\n  function handleDeleteCohort(id) {\n    const updatedCohortArray = cohorts.filter(cohort => cohort.id !== id);\n    setCohorts(updatedCohortArray);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewCohort, {\n      onAddCohort: handleAddCohort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(CohortList, {\n      cohorts: cohorts,\n      onDeleteCohort: handleDeleteCohort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Cohort, \"Gna6J2F0IfwT+dN8qoohykez96s=\");\n_c = Cohort;\nexport default Cohort;\nvar _c;\n$RefreshReg$(_c, \"Cohort\");","map":{"version":3,"names":["React","useEffect","useState","NewCohort","CohortList","Cohort","cohorts","setCohorts","fetch","then","r","json","cohortsArray","console","log","handleAddCohort","newCohort","updatedCohortArray","handleDeleteCohort","id","filter","cohort"],"sources":["/home/ruo/tracking-3/tracking-front/src/cohorts/Cohort.js"],"sourcesContent":["import React, {useEffect, useState } from 'react';\nimport NewCohort from './NewCohort';\nimport CohortList from './CohortList';\nfunction Cohort() {\n    const [cohorts, setCohorts] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/cohorts\")\n        .then ((r) => r.json())\n        .then((cohortsArray) => {\n            setCohorts(cohortsArray)\n            console.log(cohortsArray)\n        });\n    }, []);\n\n    function handleAddCohort(newCohort){\n    const updatedCohortArray = [newCohort, ...cohorts]\n    setCohorts(updatedCohortArray)\n  }\n\n    function handleDeleteCohort(id){\n        const updatedCohortArray = cohorts.filter((cohort) => cohort.id !== id);\n        setCohorts(updatedCohortArray)\n    }\n  return (\n    <div>\n         <NewCohort onAddCohort={handleAddCohort}/>\n         < CohortList\n         cohorts={cohorts}\n         onDeleteCohort ={handleDeleteCohort}\n         />\n    </div>\n  )\n}\n\nexport default Cohort"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AAAC;AACtC,SAASC,MAAM,GAAG;EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,UAAU,CAAC,CAChBC,IAAI,CAAGC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC,CACtBF,IAAI,CAAEG,YAAY,IAAK;MACpBL,UAAU,CAACK,YAAY,CAAC;MACxBC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASG,eAAe,CAACC,SAAS,EAAC;IACnC,MAAMC,kBAAkB,GAAG,CAACD,SAAS,EAAE,GAAGV,OAAO,CAAC;IAClDC,UAAU,CAACU,kBAAkB,CAAC;EAChC;EAEE,SAASC,kBAAkB,CAACC,EAAE,EAAC;IAC3B,MAAMF,kBAAkB,GAAGX,OAAO,CAACc,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACF,EAAE,KAAKA,EAAE,CAAC;IACvEZ,UAAU,CAACU,kBAAkB,CAAC;EAClC;EACF,oBACE;IAAA,wBACK,QAAC,SAAS;MAAC,WAAW,EAAEF;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAE,eAC1C,QAAE,UAAU;MACZ,OAAO,EAAET,OAAQ;MACjB,cAAc,EAAGY;IAAmB;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GA9BQb,MAAM;AAAA,KAANA,MAAM;AAgCf,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}